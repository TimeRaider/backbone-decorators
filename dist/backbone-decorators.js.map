{"version":3,"sources":["backbone-decorators.js","src/backbone-decorators.js"],"names":[],"mappings":"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","file":"backbone-decorators.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('underscore'), require('backbone')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'underscore', 'backbone'], factory) :\n    factory((global.Decorators = {}), global._, global.Backbone)\n}(this, function (exports, _, Backbone) { 'use strict';\n\n    _ = ('default' in _ ? _['default'] : _);\n    Backbone = ('default' in Backbone ? Backbone['default'] : Backbone);\n\n    /* Ideally we'd want to just pass these exports through directly\n     * but Babel complains about nesting exports, so we attach them\n     * to a namespace\n     */\n\n    function onDecoratorFactory(decoratorName, propertyName) {\n        return function(eventName) {\n             return function(target, name, descriptor) {\n                 if (!eventName) {\n                     throw new Error(`The ${decoratorName} decorator requires an eventName argument`);\n                 }\n                 if (_.isFunction(target[propertyName])) {\n                     throw new Error(`The ${decoratorName} decorator is not compatible with ${propertyName} as method form`);\n                     return;\n                 }\n                 if (target[propertyName] && !_.has(target, propertyName)) {\n                     target[propertyName] = _.clone(target[propertyName]);\n                 }\n                 if (!target[propertyName]) {\n                     target[propertyName] = {};\n                 }\n                 target[propertyName][eventName] = name;\n                 return descriptor;\n             };\n         };\n    }\n\n    // Backbone Decorators\n\n    // Views\n\n    const on = onDecoratorFactory('on', 'events');\n\n    function tagName(value) {\n        return function decorator(target) {\n            target.prototype.tagName = value;\n        };\n    }\n\n    //Collections\n\n    function model(modelClass) {\n        return function decorator(target) {\n            if (modelClass.prototype instanceof Backbone.Model) {\n                target.prototype.model = modelClass;\n            } else {\n                throw new Error('The model decorator takes either a single argument that should be an instance of Backbone.Model');\n            }\n        };\n    }\n\n    function comparator(comparatorString) {\n        return function decorator(target) {\n            if (_.isString(comparatorString)) {\n                target.prototype.comparator = comparatorString;\n            } else {\n                throw new Error('The comparator decorator takes either a single argument that should be a string');\n            }\n        };\n    }\n\n    //Models\n\n    function defaults(...args) {\n        return function decorator(target) {\n            let defaults = target.prototype.defaults || {};\n            let [key, value] = args;\n            if (_.isObject(key)) {\n                _.extend(defaults, key);\n            } else if (_.isString(key) && !_.isUndefined(value)) {\n                defaults[key] = value;\n            } else {\n                throw new Error('The defaults decorator takes either a single object as an argument or a key and value');\n            }\n            target.prototype.defaults = defaults;\n        };\n    }\n\n    //Router\n\n    function route(routeName) {\n        return function(target, name, descriptor) {\n            if (!target.routes) {\n                target.routes = {};\n            }\n            if (_.isFunction(target.routes)) {\n                throw new Error('The route decorator is not compatible with a route method');\n                return;\n            }\n            if (!routeName) {\n                throw new Error('The route decorator requires an route string argument');\n            }\n            target.routes[routeName] = name;\n            return descriptor;\n        };\n    }\n\n    // Marionette Decorators\n\n    // Views\n\n    const onModel = onDecoratorFactory('onModel', 'modelEvents');\n    const onCollection = onDecoratorFactory('onCollection', 'modelEvents');\n    const onChild = onDecoratorFactory('onChild', 'childEvents');\n\n    function template(value) {\n        return function decorator(target) {\n            target.prototype.template = value;\n        };\n    }\n\n    function childView(value) {\n        return function decorator(target) {\n            target.prototype.childView = value;\n        };\n    }\n\n    function childViewContainer(value) {\n        return function decorator(target) {\n            target.prototype.childViewContainer = value;\n        };\n    }\n\n    function ui(...args) {\n        return function decorator(target) {\n            let ui = target.prototype.ui || {};\n            let [key, value] = args;\n            if (_.isObject(key)) {\n                _.extend(ui, args[0]);\n            } else if (_.isString(key) && _.isString(value)) {\n                ui[key] = value;\n            } else {\n                throw new Error('The ui decorator takes either a single object as an argument or a key and value string');\n            }\n            target.prototype.ui = ui;\n        };\n    }\n\n    // Utility Decorators\n\n    function useSuper(target, name, descriptor) {\n        let superMethod = Object.getPrototypeOf(target)[name];\n        if (_.isFunction(superMethod)) {\n            descriptor.value = function(...args) {\n                superMethod.apply(this, args);\n            };\n        } else {\n            throw new Error('The useSuper method requires the parent class to implement this function somewhere on its prototype chain');\n        }\n        return descriptor;\n    }\n\n    //Backbone.LocalStorage Decorators\n\n    function localStorage(storageKey) {\n        return function decorator(target) {\n            if (Backbone.LocalStorage) {\n                if (_.isString(storageKey)) {\n                    target.prototype.localStorage = new Backbone.LocalStorage(storageKey);\n                } else {\n                    throw new Error('The localStorage decorator requires a single string argument which will serve as the localStorage key');\n                }\n            } else {\n                throw new Error('The localStorage decorator requires Backbone.LocalStorage to have been loaded before use');\n            }\n        };\n    }\n\n    //Marionette-service Decorators\n\n    function replyRadio(channel, requestString) {\n        return function(target, name, descriptor) {\n            if (!target.radioRequests) {\n                target.radioRequests = {};\n            }\n            if (_.isFunction(target.radioRequests)) {\n                throw new Error('The replyRadio decorator is not compatible with a radioRequests method');\n                return;\n            }\n            if (!_.isString(channel) || !_.isString(requestString)) {\n                throw new Error('The replyRadio decorator requires 2 arguments, a channel and a request string.');\n            }\n            target.radioRequests[channel + ' ' + requestString] = name;\n            return descriptor;\n        };\n    }\n\n    exports.on = on;\n    exports.tagName = tagName;\n    exports.model = model;\n    exports.comparator = comparator;\n    exports.defaults = defaults;\n    exports.route = route;\n    exports.onModel = onModel;\n    exports.onCollection = onCollection;\n    exports.onChild = onChild;\n    exports.template = template;\n    exports.childView = childView;\n    exports.childViewContainer = childViewContainer;\n    exports.ui = ui;\n    exports.useSuper = useSuper;\n    exports.localStorage = localStorage;\n    exports.replyRadio = replyRadio;\n\n}));\n","import _ from 'underscore';\nimport Backbone from 'backbone';\n\n/* Ideally we'd want to just pass these exports through directly\n * but Babel complains about nesting exports, so we attach them\n * to a namespace\n */\n\nfunction onDecoratorFactory(decoratorName, propertyName) {\n    return function(eventName) {\n         return function(target, name, descriptor) {\n             if (!eventName) {\n                 throw new Error(`The ${decoratorName} decorator requires an eventName argument`);\n             }\n             if (_.isFunction(target[propertyName])) {\n                 throw new Error(`The ${decoratorName} decorator is not compatible with ${propertyName} as method form`);\n                 return;\n             }\n             if (target[propertyName] && !_.has(target, propertyName)) {\n                 target[propertyName] = _.clone(target[propertyName]);\n             }\n             if (!target[propertyName]) {\n                 target[propertyName] = {};\n             }\n             target[propertyName][eventName] = name;\n             return descriptor;\n         };\n     };\n}\n\n// Backbone Decorators\n\n// Views\n\nexport const on = onDecoratorFactory('on', 'events');\n\nexport function tagName(value) {\n    return function decorator(target) {\n        target.prototype.tagName = value;\n    };\n}\n\n//Collections\n\nexport function model(modelClass) {\n    return function decorator(target) {\n        if (modelClass.prototype instanceof Backbone.Model) {\n            target.prototype.model = modelClass;\n        } else {\n            throw new Error('The model decorator takes either a single argument that should be an instance of Backbone.Model');\n        }\n    };\n}\n\nexport function comparator(comparatorString) {\n    return function decorator(target) {\n        if (_.isString(comparatorString)) {\n            target.prototype.comparator = comparatorString;\n        } else {\n            throw new Error('The comparator decorator takes either a single argument that should be a string');\n        }\n    };\n}\n\n//Models\n\nexport function defaults(...args) {\n    return function decorator(target) {\n        let defaults = target.prototype.defaults || {};\n        let [key, value] = args;\n        if (_.isObject(key)) {\n            _.extend(defaults, key);\n        } else if (_.isString(key) && !_.isUndefined(value)) {\n            defaults[key] = value;\n        } else {\n            throw new Error('The defaults decorator takes either a single object as an argument or a key and value');\n        }\n        target.prototype.defaults = defaults;\n    };\n}\n\n//Router\n\nexport function route(routeName) {\n    return function(target, name, descriptor) {\n        if (!target.routes) {\n            target.routes = {};\n        }\n        if (_.isFunction(target.routes)) {\n            throw new Error('The route decorator is not compatible with a route method');\n            return;\n        }\n        if (!routeName) {\n            throw new Error('The route decorator requires an route string argument');\n        }\n        target.routes[routeName] = name;\n        return descriptor;\n    };\n}\n\n// Marionette Decorators\n\n// Views\n\nexport const onModel = onDecoratorFactory('onModel', 'modelEvents');\nexport const onCollection = onDecoratorFactory('onCollection', 'modelEvents');\nexport const onChild = onDecoratorFactory('onChild', 'childEvents');\n\nexport function template(value) {\n    return function decorator(target) {\n        target.prototype.template = value;\n    };\n}\n\nexport function childView(value) {\n    return function decorator(target) {\n        target.prototype.childView = value;\n    };\n}\n\nexport function childViewContainer(value) {\n    return function decorator(target) {\n        target.prototype.childViewContainer = value;\n    };\n}\n\nexport function ui(...args) {\n    return function decorator(target) {\n        let ui = target.prototype.ui || {};\n        let [key, value] = args;\n        if (_.isObject(key)) {\n            _.extend(ui, args[0]);\n        } else if (_.isString(key) && _.isString(value)) {\n            ui[key] = value;\n        } else {\n            throw new Error('The ui decorator takes either a single object as an argument or a key and value string');\n        }\n        target.prototype.ui = ui;\n    };\n}\n\n// Utility Decorators\n\nexport function useSuper(target, name, descriptor) {\n    let superMethod = Object.getPrototypeOf(target)[name];\n    if (_.isFunction(superMethod)) {\n        descriptor.value = function(...args) {\n            superMethod.apply(this, args);\n        };\n    } else {\n        throw new Error('The useSuper method requires the parent class to implement this function somewhere on its prototype chain');\n    }\n    return descriptor;\n}\n\n//Backbone.LocalStorage Decorators\n\nexport function localStorage(storageKey) {\n    return function decorator(target) {\n        if (Backbone.LocalStorage) {\n            if (_.isString(storageKey)) {\n                target.prototype.localStorage = new Backbone.LocalStorage(storageKey);\n            } else {\n                throw new Error('The localStorage decorator requires a single string argument which will serve as the localStorage key');\n            }\n        } else {\n            throw new Error('The localStorage decorator requires Backbone.LocalStorage to have been loaded before use');\n        }\n    };\n}\n\n//Marionette-service Decorators\n\nexport function replyRadio(channel, requestString) {\n    return function(target, name, descriptor) {\n        if (!target.radioRequests) {\n            target.radioRequests = {};\n        }\n        if (_.isFunction(target.radioRequests)) {\n            throw new Error('The replyRadio decorator is not compatible with a radioRequests method');\n            return;\n        }\n        if (!_.isString(channel) || !_.isString(requestString)) {\n            throw new Error('The replyRadio decorator requires 2 arguments, a channel and a request string.');\n        }\n        target.radioRequests[channel + ' ' + requestString] = name;\n        return descriptor;\n    };\n}\n"],"sourceRoot":"/source/"}